import { en as Default, errorMessage, formatPrice, Translation } from './en'
import { Currency, CurrencySymbol } from "./types";
import { LookedUpAddress, UserAddress } from "@api/types";
import dayjs from "dayjs";


export const ru: Translation = {
	ErrorCodes: {
		...Default.ErrorCodes,
	},
	Common: {
		...Default.Common,
		errorMessage: (err: any) => errorMessage(ru, err),
		searchIn: (category: string) => `Искать в  ${category}`,
		seeInfo: 'Подробнее...',
		viewCart: 'Перейти в корзину',
		productAddToCart: (amount: number, currency: Currency) => `Добавить ${CurrencySymbol[currency]} ${formatPrice(amount)}`,
		updateCart: (amount: number, currency: Currency) => `Обновить ${CurrencySymbol[currency]} ${formatPrice(amount)}`,
		productQuantity: (quantity: number, unitId: number) => {
			return unitId === 2 ? `${quantity / 1000}кг` : String(quantity)
		},
		groupOrderYourItems: 'Заказ',
		groupOrderFinished: 'Done',
		groupOrderTitle: 'Управление заказом',
		groupOrderButton: 'Совменстный заказ',
		groupOrderButtonActive: 'Пригласить',
		groupOrderButtonCancel: 'Отменить',
		groupOrderButtonLeave: 'Отказаться',
		groupOrderButtonComplete: 'Завершить совместный заказ',
		groupOrderButtonInvite: 'Пригласить',
		exceedingLimitTittle: 'Вы не можете добавить товар',
		exceedingLimitModalMessage: (limitPrice: number) => `Вы превысили лимит в (${limitPrice}֏), установленный для этого группового заказа!`,
		groupOrderAddSupermarketProductTitle: 'Вы являетесь участником группового заказа!',
		groupOrderAddSupermarketProductMessage: 'Если вы хотите разместить заказ из раздела супермаркетов, вам следует отменить или оставить групповой заказ.',
		exceedingTheGroupOrderLimit: 'Вы превысили лимит',
		enGroupOrder: (name: string) => `Мы сообщили ${name}, что вы закончили добавлять предметы. Мы сообщим вам, как только этот заказ будет размещен`,
		commonClose: 'Закрыть',
		copyModalTittle: 'Поделиться ссылкой',
		copyModalDescription: 'Поделитесь ссылкой на групповой заказ с друзьями. Они могут добавить свои любимые товары . Оформите заказ и получите все доставки вместе.',
		copyModalButton: 'Поделиться ссылкой',
		packingCost: 'Стоимость упаковки',
	},
	OutOfStock: {
		outOfStack: "Нет в наличии",
		basketUpdate: 'Basket Update',
		proceedToPayment: "Исправить и перейти к оплате",
		onlyStock: (inStock: number) => `В наличии ${inStock} шт.`,
		updateDescription: "Сожалеем, но продукты которых нет в наличии будут удалены.",
		deleteDescription: "Որոշ ապրանքների քանակությունը պակաս է։ Շարունակելու համար թարմացրեք զամբյուղը։",
		replaceDescription: "Որոշ ապրանքներն առկա չեն։ Թարմացրեք զամբյուղը շարունակելու համար։",
		cancel: 'Закрыть',
		delete: 'Удалить',
		update: 'Обновить',
		ok: 'Хорошо'
	},
	Tabs: {
		home: 'Начало',
		restaurants: 'Фуд корт',
		cart: 'Корзина',
		shops: 'Магазины',
		profile: 'Профиль',
	},
	ShopsScreen: {
		store: "Супермаркеты",
		shops: "Магазины",
		pharmacy: "Аптека",
	},
	SWCategoryScreen: {
		stores: "Супермаркеты",
		shops: "Магазины",
		pharmacys: "Аптека",
		restaurants: 'Фуд корт',
	},
	HomeScreen: {
		modalDescription: 'Пожалуйста, введите номер телефона, чтобы в следующий раз вы могли получить доступ по номеру телефона.',
		continueButton: 'Продолжить',
		orderTracking: 'Отслеживание заказа',
		seeOrderHistory: 'Просмотреть историю заказов',
		orderNumber: 'Номер заказа',
		courier: 'Курьер',
		dearCustomer: 'Уважаемый клиент!'
	},
	FoodPartner: {
		minutes: (min: number) => `${min} мин`
	},
	UnauthenticatedScreen: {
		title: 'Добро пожаловать в Buy.am!',
		login: 'Вход',
		register: 'Регистрация',
	},
	LoginScreen: {
		title: 'Добро пожаловать в Buy.am!',
		inputLabel: 'Введите эл. почту или номер телефона',
		inputErrorValidation: 'Пожалуйста, введите зарегистрированный емайл или номер телефона',
		notFoundError: 'Профиль с этим адресом не найден',
		notFoundPhoneError: 'Профиль с этим номером телефона не найден',
		continueButton: 'Продолжить',
		createNewAccountButton: 'Создать новый аккаунт',
		socialLogin: 'Вход с социальных сетей',
	},
	LoginPasswordScreen: {
		title: 'Вход с емейл',
		inputLabel: 'Введите пароль',
		invalidPassword: 'Не верный пароль',
		buttonLabel: 'Вход',
		footerText: 'Забыли пароль?',
	},
	LoginPhoneScreen: {
		title: 'Вход с тел.номера',
		description: 'Вам выслан SMS код подтверждения',
		inputLabel: 'Введите код',
		incorrectCode: 'Не верный код',
		buttonlabel: 'Вход',
		footerText: 'Не получил код?',
	},
	ForgotPasswordScreen: {
		title: 'Забыл пароль',
		description: 'Мы отправили Вам проверочный код на эл. почту. Введите код для сброса пароля.',
		inputLabel: 'Введите код',
		incorrectCode: 'Pin код не верен либо истек',
		buttonLabel: 'Сброс пароля',
		footerText: 'Не получил код?',
	},
	CreateNewPasswordScreen: {
		title: 'Новый пароль',
		description: 'Пароль сброшен',
		passwordLabel: 'Введите новый пароль',
		repeatPasswordLabel: 'Повторите новый пароль',
		weakPassword: 'Слабый пароль. Пароль должен содержать минимум 8 символов',
		passwordDoNotMatch: 'Пароль не совпадает',
		buttonLabel: 'Принять',
	},
	ChooseAccountScreen: {
		title: 'Выбирите аккаунт',
		description: 'Для перехода в buy.am',
	},
	RegistrationScreen: {
		title: 'Регистрация',
		inputLabel: 'Эл. почта',
		inputErrorValidation: 'Пожалуйста, введите действительный адрес эл. почты',
		emailExistError: 'Эл. почта уже используется',
		continueButton: 'Продолжить',
	},
	CompleteRegistrationDetailsScreen: {
		title: 'Заполните данные',
		phoneNumber: 'Номер телефона',
		firstName: 'Имя',
		lastName: 'Фамилия',
		createPassword: 'Создайте пароль',
		repeatPassword: 'Повторите свой пароль',
		registerBusiness: 'Я хочу зарегистрироваться как компания на Buy.am',
		companyName: 'Наименование компании',
		companyTIN: 'ИНН',
		weakPassword: 'Слабый пароль. Пароль должен содержать минимум 8 символов',
		passwordDoNotMatch: 'Пароль не совпадает',
		companyTINExists: 'ИНН зарегестрирован',
		continueButton: 'Продолжить',
	},
	ValidateEmailPhoneScreen: {
		validateEmail: 'Подтвердить эл.почту',
		confirmationEmailDescription: 'Код подтверждения отправлен на Вашу эл.почту. Пожалуйста, введите 6-значный код:',
		inputLabel: 'Ввести код подтверждения',
		haventReceiveCode: 'Не получили код?',
		validatePhoneNumber: 'Подтвердить номер телефона',
		confirmationPhoneDescription: 'Код подтверждения отправлен на Ваш номер телефона. Пожалуйста, введите 6-значный код:',
		incorrectEmailCodeError: 'Не верный код. Повторите попытку или проверьте правильно ли введена эл. почта.',
		incorrectPhoneCodeError: 'Не верный код. Повторите попытку или проверьте правильно ли введен номер телефона.',
		completeRegistration: 'Завершить',
	},
	BuyWallet: {
		noHaveCards: 'У Вас нет сохраненных карт.',
		addCard: 'Прикрепить карту',
		setDefault: 'Определить основной',
		default: 'Основная',
		yourCardHasExpired: 'Срок годности карты истек',
		confirmDelete: 'Подтвердить удаление',
		areYouSureToDelete: 'Уверенны, что хотите удалить карту?',
		cancel: 'Нет',
		delete: 'Да',
		formatDeliveryDate: (date: Date) => dayjs(date).locale('ru').calendar(null, { sameElse: 'ddd, D MMM  HH:mm' }),
		BonusUsed: 'Выход',
		BonusEarned: 'Возврат',
		OrderCanceled: 'Кешбек',
		Point: 'Балл',
		transactionHistory: 'История транзакций',
		availableBalance: 'Доступный баланс',
		noToTransactions: 'В вашей истории пока нет транзакций.',
		topUpWithCard: 'Пополнить с карты',
		orderNumber: 'Номер заказа',
		ServiceFee: 'Плата за услугу',
		YourOrder: 'Ваш заказ',
		Delivery: 'Доставка',
		TOTAL: 'ВСЕГО'
	},
	GiftCards: {
		dontHaveCards: 'У вас нет подарочных карт',
		shopNow: 'Перейти к покупкам',
		footerBalance: 'Текущий баланс:',
		giftCard: 'Подарочная карта',
		expiryDate: 'Срок действия',
		code: 'Код:',
		active: 'Активен',
		expired: 'Истекший',
		giftCardBalance: 'Баланс:',
		seeDetails: 'Подробности',
		balance: 'Текущий баланс։',
		giftCardDetails: 'Детали подарочной карты',
		redeemGiftCard: 'Активировть под. карту',
		giftCardRedeemed: 'Подарочная карта активирована!',
		addedBonusBalance: 'Добавлено к балансу',
	},
	RedeemGiftCard: {
		title: 'Активировть подарочную карту',
		youCandFindYourCode: 'Код находится на обратной стороне подарочной карты, как показано здесь',
		claimCode: 'Ввести код',
		codeNotExist: 'Введенный вами код не существует. Пожалуйста, проверьте и повторите попытку.',
		currentBalance: 'Текущий баланс:',
		save: 'Сохранить',
	},
	MyAddresses: {
		dontHaveAddresses: 'Нет сохраненных адресов',
		addNewAddress: 'Добавить адрес',
		setAsDefault: 'Определить основным',
		default: 'Основной',
		myAddresses: 'Мои адреса',
		address: 'Адрес, расположение, город',
		entrance: 'Вход',
		apartment: 'Квартира',
		floor: 'Этаж',
		doorCode: 'Код домофона',
		saveAddress: 'Сохранить',
		enterDetails: 'Подробнее',
		pleaseAddAddress: 'Укажите адрес доставки',
		searchNoResults: 'Вне зоны доставки',
		searchPlaceHolder: 'адрес',
		searchTypeForResult: '',
		confirmDelete: 'Подтвердить удаление',
		areYouSureToDelete: 'Уверенны, что хотите удалить адрес?',
		cancel: 'Нет',
		delete: 'Да',
	},
	Favorites: {
		emptyListDescription: 'Вы можете добавить в список избранные продукты, рестораны или магазины. Это позволит Вам легче находить и добавлять их в корзину!',
		startShopping: 'Совершайте покупки',
		all: 'ВСЕ',
		restaurants: 'РЕСТОРАНЫ',
		stores: 'СУПЕРМАРКЕТЫ',
		products: 'ПРОДУКТЫ',
		shop: "МАГАЗИНЫ",
		pharmacy: "АПТЕКИ",
		Partners: 'Партнеры',
		searchInFavorites: 'Поиск в избранном',
		restaurantsAndStores: 'Рестораны & Магазины',
		product: 'Продукты',
		matching: 'соответствие товаров'
	},
	SearchResultPanel: {
		NoResultFound: 'Результатов не найдено.',
		WeCouldNtFindWhatYouAreLookingFor: 'Нам не удалось найти то, что вы ищете.',
		GoToHomePage: ' Вернуться на главную страницу ',
		all: 'Партнеры',
		restaurant: 'Рестораны',
		store: 'Супермаркеты',
		products: 'продукты',
		shop: "Магазины",
		pharmacy: "Аптеки",
	},
	PhoneNumberInput: {
		title: 'Выбрать страну',
		search: 'Поиск Страны',
		phoneNumber: 'Номер телефона',
	},
	PersonalInformation: {
		firstName: 'Имя',
		lastName: 'Фамилия',
		gender: 'Пол',
		companyName: 'Название Компания',
		companyTin: 'ИНН Компании',
		companyTINExists: 'ИНН зарегестрирован',
		invalidTIN: 'Должно быть не менее 8 цифр.',
		male: 'Мужской',
		female: 'Женский',
		save: 'Сохранить',
		personalInformation: 'Личная информация',
		businessInformation: 'Деловая информация',
		changePassword: 'Поменять пароль',
		changeContactInformation: 'Изменить контактные данные',
		accountDeletion: 'Удаление аккаунта',
	},
	ChangePasswordScreen: {
		enterCurrentPassword: 'Введите текущий пароль',
		enterNewPassword: 'Введите новый пароль',
		confirmNewPassword: 'Повторитe новый пароль',
		weakPassword: 'Слабый пароль. Пароль должен содержать минимум 8 символов',
		wrongCurrentPasswordError: 'Не верный пароль',
		passwordsNotMatch: 'Пароль не совпадает',
	},
	ContactInformationScreen: {
		title: 'Личная информация',
		emailInputLabel: 'Эл.почта',
		updateNumber: 'Обновить номер',
		invalidPhoneError: 'Введите правильный номер',
		updateEmail: 'Обновить эл.почту',
		invalidEmailError: 'Пожалуйста, введите действительный адрес эл.почты',
		emailExistError: 'Эл.почта уже зарегистрированна.',
		couldNotSendSmsCode: 'SMS код не был выслан.',
		tryAgainLater: 'Попробуйте позже.',
	},
	PersonalInformationValidationScreens: {
		phoneTitle: 'Проверочный код отправлен на Ваш телефонный номер.',
		phoneDescription: 'Вы должны подтвердить номер телефона, прежде чем изменения вступят в силу.',
		emailTitle: 'Проверочный код отправлен на эл.почту.',
		emailDescription: 'Вы должны подтвердить эл.почту, прежде чем изменения вступят в силу.',
		validationCodeLabel: 'Проверочный код',
		resendCodeButton: 'Переслать код',
		validateNumber: 'Подтвердить номер',
		validateEmail: 'Подтвердить эл.почту',
		incorrectCodeError: 'Не верный код. Попробуйте снова.',
	},
	AccountDeactivationScreen: {
		header1: 'Запрос на удаление профиля',
		note1: 'Обратите внимание, что закрытие учетной записи является необратимым действием,' +
			' и после того, как ваша учетная запись Buy.am будет закрыта, она больше не будет' +
			' вам доступна и не может быть восстановлена. Если позже вы решите, что хотите' +
			' снова начать заказывать у нас, или если вы хотите использовать продукты и услуги,' +
			' для которых требуется учетная запись, вам потребуется создать новую учетную запись.',
		header2: 'Причина ухода с платформы Buy.am',
		options: [
			'Я больше не пользуюсь приложением',
			'Пользуюсь более удобным приложением',
			'Неудачный опыт работы с приложением (технические проблемы или сбой)',
			'Плохое обслуживание клиентов',
			'Неудовлетворительное качество еды/доставки',
			'Я не хочу указывать причину',
			'Прочее'
		].join('\n'),
		btnCancel: 'Отменить',
		deleteAccountDescription: 'Пожалуйста, объясните причину',
		btnSubmit: 'Отправить',
		emailSubject: 'Запрос на удаление профиля',
		emailBody: (options: string[], accountId: number, fullName: string) => {
			const reasonsText = options.map(r => `[x] ${r}`).join('\n')
			return 'Уважаемая служба поддержки,\n\n'
				+ 'Прошу удалить мой профиль с платформы buy.am.\n\n'
				+ `Причина удаления профиля:\n${reasonsText}\n`
				+ 'Я понимаю, что удaление необратимо, и что я потеряю доступ к любому контенту, услугам или преимуществам, предоставляемым платформой.\n'
				+ 'Можете связаться со мной в случае, если у вас есть вопросы или необходима дополнительная информация.\n'
				+ 'С уважением,\n' + fullName
		}
	},
	OrdersHistory: {
		dontHaveOrders: 'У Вас пока нет заказов',
		shopNow: 'Перейти к покупкам',
		orderDetails: 'Детали заказа',
		order: 'Заказ',
		address: 'Адрес',
		creationTime: 'Время создания',
		deliveryTime: 'Время доставки',
		paymentMethod: 'Метод оплаты',
		inProgress: 'В процесе',
		delivered: 'Доставлено',
		canceled: 'Аннулирован',
		serviceFee: 'Обслуживание',
		yourOrder: 'Ваш заказ',
		delivery: 'Доставка',
		giftCard: 'Подарочна карта',
		promocode: 'Промокод',
		total: 'ИТОГО',
		cancelOrderButton: 'Отменить заказ',
		rateOrderButton: 'Оценить заказ',
		reorder: 'Повторить заказ',
		orderPoints: 'Кошелек buy.am',
		thankYou: 'Спасибо',
		appreciateFeedback: 'Спасибо за отзыв!',
		rateOtherProducts: 'Оценить другие продукты',
		confirmDelete: 'Подтвердить удаление',
		areYouSureToDelete: 'Уверенны, что хотите отменить заказ?',
		cancel: 'Аннулировать',
		delete: 'Удалить',
		orderAccepted: "Заказ принят"
	},
	OrderDetailsSteps: {
		orderAccepted: "Заказ принят",
		orderIsBeingPrepared: "Заказ в процессе подготовки",
		orderIsOnItsWay: "Заказ в дороге ",
		orderDelivered: "Достаавлен",
	},
	RateOrderScreen: {
		properlyCollected: 'Был ли заказ правильно собран?',
		dishDelicious: 'Было ли блюдо вкусным?',
		orderAgain: 'Вы бы заказали еду из этого ресторана ещё раз?',
		rateDeliveryService: 'Пожалуйста, оцените сервис доставки buy.am․',
		issuesWithYourExperience: 'Были проблемы с доставкой?',
		letUsKnow: 'Как мы можем улучшить наш сервис?',
		deliveryTime: 'Время доставки',
		courierService: 'Курьерская служба',
		orderAccuracy: 'Точность заказа',
		good: 'Хорошо',
		bad: 'Плохо',
		comment: 'Комментарий',
		rate: 'Оценка',
	},
	StartGroupOrder: {
		title: 'Создать групповой заказ',
		info: 'Добавьте товары в этот заказ, и все будет доставлено вместе.',
		limitNote: 'Установите лимит на каждого участника заказа',
		noLimit: 'Безлимитный',
		otherLimit: 'Другое',
		limitPlaceHolder: 'Лимит.',
		startButton: 'Начать',
		joinGroupOrderPlaceholder: 'Присоединиться к групповому заказу.',
		joinGroupOrderButton: 'Присоединиться',
		CreateAgroupOrder: 'Создать групповой заказ',
		ToCreateAGroupOrderYourBasketWillBeCleared: 'Чтобы создать групповой заказ, ваша корзина будет очищена.',
		create: 'Создать',
		cancel: 'Отменить'
	},
	JoinGroupOrder: {
		note: 'Присоединиться к групповому заказу.',
		noteAlreadyJoined: 'Вы в групповом заказе',
		errInvalidLink: 'Групповой заказ не может быть найден.',
		errHasActiveGroupOrder: 'У вас есть активный групповой заказ! Пожалуйста, отмените его перед присоединением к другому.',
		errInGroupOrder: 'Вы уже участвуете в групповом заказе! Пожалуйста, покиньте его перед присоединением к этому.',
		buttonLeave: 'Покинуть текущий групповой заказ.',
		buttonCancel: 'Отменить мой групповой заказ.',
		buttonClose: 'Хорошо',
		buttonJoin: 'Присоединиться к групповому заказу.',
		buttonStartShopping: 'Начать',
		limitTitle: 'Лимит',
		limitValue: (limit: number) => limit >= 9999999 ? 'Безлимитный' : ru.Common.price(limit, 'AMD')
	},
	CartScreen: {
		title: 'Корзина',
		emptyText: 'Ваша корзина пуста',
		checkOut: 'Оформить заказ',
		yourOrder: 'Ваш заказ',
		serviceFee: 'Обслуживание',
		delivery: 'Доставка',
		promocode: 'Промокод',
		total: 'ИТОГО',
		cancelGroupOrder: (name: string) => `Отказаться от группового заказа ${name}`,
		allItemsWillBeRemoved: 'Все продукты будут удалены',
		cancel: 'Сохранить',
		delete: 'Отменить заказ',
		usersGroupOrder: (name: string) => name?.length > 1 ? `Групповой заказ ${name}` : `Групповой заказ`
	},
	CheckoutScreen: {
		Remove: "Удалить",
		ok: "Закрвать",
		AccumulatedPoints: "Накопленные баллы:",
		title: 'Оформление заказа',
		delivery: 'Доставка',
		asPossible: 'Как можно скорее',
		schedule: 'Планирование',
		selectATime: 'Выберите время',
		currentGiftCardBalance: 'Текущий баланс подарочной карты:',
		enterAddressLabel: 'Введите свой адрес',
		dateLabel: 'Когда',
		timeLabel: 'Время',
		commentLabel: 'Коментарий',
		giftCardPromocodeTitle: 'Подарочная карта и промокод',
		enterCodeLabel: 'Введите код',
		apply: 'Применить',
		paymentMethod: 'Метод оплаты',
		payInCash: 'Платить наличными',
		bankTransfer: 'Банковский перевод',
		posTerminal: 'POS терминал',
		addCard: 'Добавить карту',
		proceedToPayment: 'Перейти к оплате',
		thankYouForYourPurchase: 'Спасибо за покупки!',
		yourOrderHasBeenAccepted: 'Ваш заказ оформлен',
		continueShopping: 'Продолжить покупки',
		Wallet: 'Подробнее',
		Accumulated: 'Накоплено :',
		useYourPointsForTheNextOrder: 'Используйте баллы для следующего заказа.',
		sorry: 'Извините!',
		checkingPayment: 'Подтверждение платежа',
		orderProgressTitle: (orderId: any) => `Заказ: #${orderId}`,
		unableToProcessThePayment: 'Нам не удалось обработать платеж',
		tryAgain: 'Попробуй еще раз',
		formatDeliveryDate: (date: Date) => {
			return dayjs(date).locale('ru').calendar(null, {
				sameDay: 'Сегодня',
				nextDay: 'Завтра',
				nextWeek: 'ddd, D MMM',
				// lastDay: 'ddd, D MMM',
				// lastWeek: 'ddd, D MMM',
				sameElse: 'ddd, D MMM'
			})
		},
		formatAddressLine1: (address?: UserAddress | LookedUpAddress) => Default.CheckoutScreen.formatAddressLine1(address),
		formatAddressLine2: (address?: UserAddress) => {
			let addr = [];
			address?.entrance && addr.push(`вход ${address.entrance}`)
			address?.doorCode && addr.push(`код входа ${address.doorCode}`)
			address?.floor && addr.push(`этаж ${address.floor}`)
			address?.apartment && addr.push(`кв. ${address.apartment}`)
			return addr.join(', ');
		},
	},
	ProfileScreen: {
		favorites: 'Избранное',
		orderHistory: 'История заказов',
		personalInformation: 'Личная информация',
		businessInformation: 'Деловая информация',
		myAddresses: 'Мои адреса',
		giftCards: 'Подарочые карты',
		BuyWallet: 'Buy.am кошелек',
		logOut: 'Выйти',
		myProfile: 'Мой профиль',
		History: 'История'
	},
	ArticleModal: {
		comment: "Kомментарий",
		code: "Код : "
	},
	FilterModal: {
		priceRange: 'ЦЕНОВОЙ ДИАПАЗОН',
		onlySale: 'Только распродажа',
		filter: 'Фильтр',
		sortBy: 'Сортировать по',
		byCategories: 'По категориям',
		recommended: 'Рекомендуемые',
		mostPopular: 'По популярности',
		new: 'По обновлению',
		distance: 'По расстоянию',
		pickedForYou: 'Специально для Вас',
		// deals:'сделки',
		deliveryTime: 'Время доставки',
		freeDelivery: 'Бесплатная доставка',
		reset: 'Сбрсить',
		apply: 'Применить',
		releaseDate: 'Дата выпуска',
		popularity: 'Популярность',
		lowestPrice: 'Низшая цена',
		highestPrice: 'Высокая цена',
		// apply: (N: number) =>  `Apply (${N} found)`
	},
	CategoryModal: {
		seeAll: "Все"
	},
	AppBar: {
		Other: "Другой",
		Categories: "Категории"
	},
	ManufactureElement: {
		Closed: 'Закрыто'
	},
	ClosedManufactureModal: {
		restaurant: 'Ресторан',
		shop: 'Магазин',
		store: 'Супермаркет',
		pharmacy: 'Аптека',
		Info: (syplaerType: any) => `Вы можете сделать предзаказ, который будет доставлен как только откроется ${syplaerType}.`,
		ChooseAnotherRestaurant: (syplaerType: any) => `Выбрать другой ${syplaerType}`,
		PreorderFromThisRestaurant: `Предзаказ`,
		It_will_reopen: (date: Date) => `It will reopen at ${dayjs(date).locale('en').calendar(null, {
			sameDay: '[Today]  HH:mm',
			nextDay: '[Tomorrow]  HH:mm',
			nextWeek: 'ddd, D MMM  HH:mm',
			sameElse: 'ddd, D MMM  HH:mm'
		})
		}`,
		supplierClosed: (supplierType) => `${supplierType} закрыт.`
	},
	NetworkStatusModalWindow: {
		OOPS: 'Упс!',
		NoInternetConnection: 'Отсутствует подключение к интернету',
		PleaseCheckYourInternetSettings: 'Пожалуйста, проверьте настройки интернета',
		TryAgain: 'Попробовать снова'
	},
	RestaurantInformation:{
        RestaurantInformation:'Информация о ресторане',
		Closed : 'закрыто',
		OpenNow :'открыто'
	}

}
